#!/bin/sh

######################################################################
# Variables you can edit
######################################################################

prefix=/etc/pf
backup=/etc/pf/bkp

if [ "$( id -u )" != "0" ]; then
	echo "ERROR: Must be root!"
	exit 1
fi

usage() {
	cat <<EOF
usage:  ${0##*/} add table address/mask
	${0##*/} backup table
	${0##*/} clear table
	${0##*/} expire table
	${0##*/} import table file
	${0##*/} load table
	${0##*/} remove table address/mask
	${0##*/} save table
	${0##*/} show table
EOF
}

if [ -z "$2" ] || [ "$2" = "all" ]; then
  case $1 in
    backup|clear|expire|import|load|save|show)
      for i in ${prefix}/*.table ; do
        table=`echo $i | sed "s;${prefix}/;;" | sed 's;\.table;;'`
        echo "Running: $0 $1 $table"
        $0 $1 $table
      done
    ;;
  esac
  exit
fi

case $1 in
add)
	if [ -z "$3" ]; then usage ; exit 1 ; fi
	pfctl -P -t $2 -T add "$3" 2>/dev/null || exit $? ;;
backup)
	install -d -m 700 ${backup}
	outfile=${backup}/$2.table.`date +%y%m%d-%H%M%S`
	prevfile=`ls -1tr ${backup}/$2.table.* 2>/dev/null | tail -1 `
	pfctl -P -t $2 -T show >${outfile} 2>/dev/null || exit $?
	if [ "x" != "x$prevfile" -a "$prevfile" != "$outfile" ]; then
		if /usr/bin/diff $prevfile $outfile >/dev/null 2>&1 ; then
			rm $outfile
		else
			echo $outfile
		fi
	else
		echo $outfile
	fi
;;
clear)
	########## remove entries
	pfctl -P -t $2 -T expire 0 2>/dev/null || exit $? ;;
expire)
	########## remove entries which have not been referenced in 86400 seconds (1 day) x 100
	pfctl -P -t $2 -T expire 8640000 2>/dev/null || exit $? ;;
import)
	if [ -z "$3" ]; then usage ; exit 1 ; fi
	pfctl -P -t $2 -T replace -f "$3" 2>/dev/null || exit $? ;;
load)
	pfctl -P -t $2 -T replace -f "${prefix}/$2.table" 2>/dev/null || exit $? ;;
remove)
	if [ -z "$3" ]; then usage ; exit 1 ; fi
	pfctl -P -t $2 -T delete "$3" 2>/dev/null || exit $? ;;
save)
	pfctl -P -t $2 -T show >"${prefix}/$2.table" 2>/dev/null || exit $? ;;
show)
	pfctl -P -t $2 -T show 2>/dev/null || exit $? ;;
*)
	usage ; exit 1 ;;
esac
